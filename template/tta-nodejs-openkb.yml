---
kind: "Template"
apiVersion: "v1"
metadata:
  name: "tta-nodejs-openkb"
  namespace: "openshift"
  labels:
    portal_reqEnabled: "true"
  annotations:
    description: "An example Node.js application with no database. For more information\
      \ about using this template, including OpenShift considerations, see https://github.com/sclorg/nodejs-ex/blob/master/README.md."
    iconClass: "icon-nodejs"
    openshift.io/display-name: "nodeJS openKB"
    openshift.io/documentation-url: "https://github.com/sclorg/nodejs-ex"
    openshift.io/long-description: "This template defines resources needed to develop\
      \ a NodeJS application, including a build configuration and application deployment\
      \ configuration.  It does not include a database."
    openshift.io/provider-display-name: "Red Hat, Inc."
    openshift.io/support-url: "https://access.redhat.com"
    tags: "nodejs,openKB,Portal"
    template.openshift.io/bindable: "false"
message: "The following service(s) have been created in your project: ${NAME}.\n\n\
  For more information about using this template, including OpenShift considerations,\
  \ see https://github.com/sclorg/nodejs-ex/blob/master/README.md."
objects:
 -
  apiVersion: "v1"
  kind: "Service"
  metadata:
    annotations:
      description: "Exposes and load balances the application pods"
    name: "${NAME}"
  spec:
    ports:
     -
      name: "web"
      port: 8080
      targetPort: 4444
    selector:
      name: "${NAME}"
 -
  apiVersion: "v1"
  kind: "Route"
  metadata:
    name: "${NAME}"
  spec:
    host: "${APPLICATION_DOMAIN}"
    to:
      kind: "Service"
      name: "${NAME}"
 -
  apiVersion: "v1"
  kind: "ImageStream"
  metadata:
    annotations:
      description: "Keeps track of changes in the application image"
    name: "${NAME}"
 -
  apiVersion: "v1"
  kind: "BuildConfig"
  metadata:
    annotations:
      description: "Defines how to build the application"
      template.alpha.openshift.io/wait-for-ready: "true"
    name: "${NAME}"
  spec:
    output:
      to:
        kind: "ImageStreamTag"
        name: "${NAME}:latest"
    source:
      contextDir: "${CONTEXT_DIR}"
      git:
        ref: "${SOURCE_REPOSITORY_REF}"
        uri: "${SOURCE_REPOSITORY_URL}"
      type: "Git"
    strategy:
      sourceStrategy:
        env:
         -
          name: "NPM_MIRROR"
          value: "${NPM_MIRROR}"
        from:
          kind: "ImageStreamTag"
          name: "nodejs:${NODEJS_VERSION}"
          namespace: "${NAMESPACE}"
      type: "Source"
    triggers:
     -
      type: "ImageChange"
     -
      type: "ConfigChange"
     -
      github:
        secret: "${GITHUB_WEBHOOK_SECRET}"
      type: "GitHub"
     -
      generic:
        secret: "${GENERIC_WEBHOOK_SECRET}"
      type: "Generic"
 -
  apiVersion: "v1"
  kind: "DeploymentConfig"
  metadata:
    annotations:
      description: "Defines how to deploy the application server"
      template.alpha.openshift.io/wait-for-ready: "true"
    name: "${NAME}"
  spec:
    replicas: 1
    selector:
      name: "${NAME}"
    strategy:
      type: "Rolling"
    template:
      metadata:
        labels:
          name: "${NAME}"
        name: "${NAME}"
      spec:
        containers:
         -
          env: []
          image: "${NAME}"
          livenessProbe:
            httpGet:
              path: "/"
              port: 4444
            initialDelaySeconds: 30
            timeoutSeconds: 3
          name: "${NAME}"
          ports:
           -
            containerPort: 4444
          readinessProbe:
            httpGet:
              path: "/"
              port: 4444
            initialDelaySeconds: 3
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "${CPU_LIMIT}"
              memory: "${MEMORY_LIMIT}"
            requests:
              cpu: "${CPU_REQUEST}"
              memory: "${MEMORY_REQUEST}"
    triggers:
     -
      imageChangeParams:
        automatic: true
        containerNames:
         - "${NAME}"
        from:
          kind: "ImageStreamTag"
          name: "${NAME}:latest"
      type: "ImageChange"
     -
      type: "ConfigChange"
parameters:
 -
  name: "NAME"
  displayName: "Name"
  description: "The name assigned to all of the frontend objects defined in this template."
  value: "openkb"
  required: true
 -
  name: "NAMESPACE"
  displayName: "Namespace"
  description: "The OpenShift Namespace where the ImageStream resides."
  value: "openshift"
  required: true
 -
  name: "NODEJS_VERSION"
  displayName: "Version of NodeJS Image"
  description: "Version of NodeJS image to be used (6, 8, or latest)."
  value: "latest"
  required: true
 -
  name: "SOURCE_REPOSITORY_URL"
  displayName: "Git Repository URL"
  description: "The URL of the repository with your application source code."
  value: "https://github.com/mrvautin/openKB.git"
  required: true
 -
  name: "SOURCE_REPOSITORY_REF"
  displayName: "Git Reference"
  description: "Set this to a branch name, tag or other ref of your repository if\
    \ you are not using the default branch."
 -
  name: "CONTEXT_DIR"
  displayName: "Context Directory"
  description: "Set this to the relative path to your project if it is not in the\
    \ root of your repository."
 -
  name: "APPLICATION_DOMAIN"
  displayName: "Application Hostname"
  description: "The exposed hostname that will route to the Node.js service, if left\
    \ blank a value will be defaulted."
 -
  name: "GITHUB_WEBHOOK_SECRET"
  displayName: "GitHub Webhook Secret"
  description: "Github trigger secret.  A difficult to guess string encoded as part\
    \ of the webhook URL.  Not encrypted."
  generate: "expression"
  from: "[a-zA-Z0-9]{40}"
 -
  name: "GENERIC_WEBHOOK_SECRET"
  displayName: "Generic Webhook Secret"
  description: "A secret string used to configure the Generic webhook."
  generate: "expression"
  from: "[a-zA-Z0-9]{40}"
 -
  name: "NPM_MIRROR"
  displayName: "Custom NPM Mirror URL"
  description: "The custom NPM mirror URL"
 -
  name: "CPU_REQUEST"
  displayName: "CPU 할당"
  description: "Container cpu request"
  value: "1"
 -
  name: "MEMORY_REQUEST"
  displayName: "메모리 할당"
  description: "Container memory request"
  value: "2Gi"
 -
  name: "CPU_LIMIT"
  displayName: "CPU 제한"
  description: "Container cpu limit"
  value: "1"
 -
  name: "MEMORY_LIMIT"
  displayName: "메모리 제한"
  description: "Container memory limit"
  value: "2Gi"
labels:
  app: "tta-nodejs-openkb"
  template: "tta-nodejs-openkb"